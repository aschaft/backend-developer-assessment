//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace iPlatformBackend
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ipMusicEntities : DbContext
    {
        public ipMusicEntities()
            : base("name=ipMusicEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Artist> Artists { get; set; }
        public DbSet<ArtistAlia> ArtistAlias { get; set; }
        public DbSet<Country> Countries { get; set; }
    
        public virtual int proc_Artist(string cmd, string artistName, string uniqueId, string countryId, string alias, Nullable<int> aliasId, Nullable<int> pageNo, Nullable<int> pageSize, ObjectParameter artistId)
        {
            var cmdParameter = cmd != null ?
                new ObjectParameter("Cmd", cmd) :
                new ObjectParameter("Cmd", typeof(string));
    
            var artistNameParameter = artistName != null ?
                new ObjectParameter("ArtistName", artistName) :
                new ObjectParameter("ArtistName", typeof(string));
    
            var uniqueIdParameter = uniqueId != null ?
                new ObjectParameter("UniqueId", uniqueId) :
                new ObjectParameter("UniqueId", typeof(string));
    
            var countryIdParameter = countryId != null ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(string));
    
            var aliasParameter = alias != null ?
                new ObjectParameter("Alias", alias) :
                new ObjectParameter("Alias", typeof(string));
    
            var aliasIdParameter = aliasId.HasValue ?
                new ObjectParameter("AliasId", aliasId) :
                new ObjectParameter("AliasId", typeof(int));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Artist", cmdParameter, artistNameParameter, uniqueIdParameter, countryIdParameter, aliasParameter, aliasIdParameter, pageNoParameter, pageSizeParameter, artistId);
        }
    }
}
